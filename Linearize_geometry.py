import os
import sys
import pathlib
import time
import threading
import base64
import zipfile
import tempfile
import io


from osgeo import ogr
from osgeo import gdal
gdal.PushErrorHandler('CPLQuietErrorHandler')
ogr.UseExceptions()


segmentize_tolerance = 3.0



class Progress_bar:
    last_update_time = 0
    offset = 5
    additional_lines = 0

    @staticmethod   
    def print_with_progress(msg, i, total, prefix='', length=50, fill='█'):
        # Clear the previous progress bar line
        sys.stdout.write('\r' + ' ' * (length + 40) + '\r')
        sys.stdout.flush()
        # Print message on a new line
        print(msg)
        # Redraw progress bar on the same line (no extra newline)
        percent = f"{100 * (i / total):.1f}"
        filled_length = int(length * i // total)
        bar = fill * filled_length + '-' * (length - filled_length)
        sys.stdout.write(f'{prefix} |{bar}| {percent}% Complete')
        sys.stdout.flush()

    @staticmethod
    def progress_bar(iterable, total, prefix='', length=50, fill='█'):
        for i, item in enumerate(iterable, 1):
            percent = f"{100 * (i / total):.1f}"
            filled_length = int(length * i // total)
            bar = fill * filled_length + '-' * (length - filled_length)
            sys.stdout.write(f'\r{prefix} |{bar}| {percent}% Complete')
            sys.stdout.flush()
            yield item, i
        print()  # Move to new line after finishing

    @staticmethod
    def print_smooth_progress(current, total, prefix='', length=50, fill='█', throttle_seconds=0.05, newline=False):
        now = time.time()
        if now - Progress_bar.last_update_time < throttle_seconds and current != total:
            return  
        percent = f"{100 * (current / total):.1f}"
        filled_length = int(length * current // total)
        bar = fill * filled_length + '-' * (length - filled_length)
        sys.stdout.write(f'\r{prefix} |{bar}| {percent}% Complete')
        if newline:
            sys.stdout.write('\n')  # Move to the next line if newline is True
        sys.stdout.flush()
    
        Progress_bar.last_update_time = now
        if current == total:
            sys.stdout.write('\r' + ' ' * (length + len(prefix) + 40) + '\r')
            sys.stdout.flush()
    @staticmethod
    def clear_terminal():
        sys.stdout.write('\033[2J')
        sys.stdout.write('\033[H')
        sys.stdout.flush()

    def print_with_offset(msg, offset):
        sys.stdout.write(f'\033[{offset + Progress_bar.offset + Progress_bar.additional_lines};1H{msg}')
        sys.stdout.flush()
        Progress_bar.additional_lines += 1


class File_handles:
    @staticmethod
    def import_file(src_gdb):
        # Determine the file extension and select the appropriate driver
        ext = os.path.splitext(src_gdb)[1].lower()
        driver = None

        if ext == ".gdb":
            driver = ogr.GetDriverByName("OpenFileGDB")
        elif ext == ".gpkg":
            driver = ogr.GetDriverByName("GPKG")
        elif ext == ".shp":
            driver = ogr.GetDriverByName("ESRI Shapefile")
        elif ext == ".esrijson" or ext == ".json":
            driver = ogr.GetDriverByName("ESRIJSON")
        elif ext == ".geojson":
            driver = ogr.GetDriverByName("GeoJSON")
        elif ext == ".dxf":
            driver = ogr.GetDriverByName("DXF")
        elif ext == ".dwg":
            driver = ogr.GetDriverByName("CAD")
        else:
            print(f"\033[31m Unsupported file extension: {ext}\033[0m")
            return None

        if driver is None:
            print("\033[31mCould not find a suitable OGR driver.\033[0m")
            return None

        src_ds = driver.Open(src_gdb, 0)
        if src_ds is None:
            print("\033[31mCould not open source dataset.\033[0m")
            return None
        return src_ds

    @staticmethod
    def export_file(dst_path):

        ext = os.path.splitext(dst_path)[1].lower()
        out_driver = None

        if ext == ".gdb":
            out_driver = ogr.GetDriverByName("OpenFileGDB")
        elif ext == ".gpkg":
            out_driver = ogr.GetDriverByName("GPKG")
        elif ext == ".shp":
            out_driver = ogr.GetDriverByName("ESRI Shapefile")
        elif ext == ".esrijson" or ext == ".json":
            out_driver = ogr.GetDriverByName("ESRIJSON")
        elif ext == ".geojson":
            out_driver = ogr.GetDriverByName("GeoJSON")
        elif ext == ".dxf":
            out_driver = ogr.GetDriverByName("DXF")
        elif ext == ".dwg":
            out_driver = ogr.GetDriverByName("CAD")
        else:
            print(f"\033[31mUnsupported file extension: {ext}\033[0m")
            return None

        if out_driver is None:
            print(f"\033[31m{file_type} driver not available for writing.\033[0m")
            return None
        if os.path.exists(dst_path):
            out_driver.DeleteDataSource(dst_path)
        dst_ds = out_driver.CreateDataSource(dst_path)
        if dst_ds is None:
            print("\033[31mCould not create destination dataset.\033[0m")
            return None
        return dst_ds


class GeometryConverter:
    @staticmethod
    def convert_multicurve_to_multilinestring(geom):
        multiline = ogr.Geometry(ogr.wkbMultiLineString)
        for i in range(geom.GetGeometryCount()):
            subgeom = geom.GetGeometryRef(i)
            linestring = GeometryConverter.linearize_geometry(subgeom)
            if linestring is not None:
                multiline.AddGeometry(linestring)
        return multiline

    @staticmethod
    def convert_multisurface_to_multipolygon(geom):
        multipoly = ogr.Geometry(ogr.wkbMultiPolygon)
        for i in range(geom.GetGeometryCount()):
            subgeom = geom.GetGeometryRef(i)
            polygon = GeometryConverter.linearize_geometry(subgeom)
            if polygon is not None:
                multipoly.AddGeometry(polygon)
        return multipoly

    @staticmethod
    def is_multicurve(geom):
        return (
            geom.GetGeometryType() == ogr.wkbMultiCurve or
            geom.GetGeometryType() == ogr.wkbMultiCurve + 1000 or
            geom.GetGeometryName().upper() == "MULTICURVE"
        )

    @staticmethod
    def is_multisurface(geom):
        return (
            geom.GetGeometryType() == ogr.wkbMultiSurface or
            geom.GetGeometryType() == ogr.wkbMultiSurface + 1000 or
            geom.GetGeometryName().upper() == "MULTISURFACE"
        )


    @staticmethod
    def linearize_geometry(geom):
        if geom is None:
            return None
        try:
            geom = geom.GetLinearGeometry() or geom
        except Exception:
            pass  # If segmentize fails, keep geometry as is 

        if GeometryConverter.is_multicurve(geom):
            geom = GeometryConverter.convert_multicurve_to_multilinestring(geom)
        elif GeometryConverter.is_multisurface(geom):
            geom = GeometryConverter.convert_multisurface_to_multipolygon(geom)
        
        curve_types = [
            ogr.wkbCircularString, ogr.wkbCompoundCurve, ogr.wkbCurvePolygon,
            ogr.wkbMultiCurve, ogr.wkbMultiSurface, ogr.wkbCurve, ogr.wkbCircularStringZ,
            ogr.wkbCompoundCurveZ, ogr.wkbCurvePolygonZ, ogr.wkbMultiCurveZ, ogr.wkbMultiSurfaceZ, ogr.wkbCurveZ
        ]
        if geom.GetGeometryType() in curve_types or "CURVE" in geom.GetGeometryName().upper():
            geom = geom.segmentize(segmentize_tolerance)
 
            linearized_subs = []
            for i in range(geom.GetGeometryCount()):
                sub = geom.GetGeometryRef(i)
                if sub is not None:
                    linear_sub = GeometryConverter.linearize_geometry(sub)
                    if linear_sub is not None:
                        linearized_subs.append(linear_sub)
            # Remove all sub-geometries and add back the linearized ones

            if linearized_subs:
                for _ in range(geom.GetGeometryCount()-1, -1, -1):
                    geom.RemoveGeometry(_)
                for linear_sub in linearized_subs:
                    geom.AddGeometry(linear_sub)

            geom = geom.GetLinearGeometry()
        return geom

    @staticmethod
    def copy_features(src_layer, out_layer, progress_callback=None, error_handler=None):
        total_features = src_layer.GetFeatureCount()
        for i, feature in enumerate(src_layer):
            out_feature = ogr.Feature(out_layer.GetLayerDefn())
            # Get geometry and edit as needed
            geom = feature.GetGeometryRef()
            
            if geom is None:
                if all_errors:
                    msg = f"\033[31m No geometry found for feature \033[38;5;64m{feature.GetFID()}\033[31m in \033[38;5;64m{src_layer.GetName()}\033[0m"
                    if error_handler:
                        if not error_handler(msg):
                            return  # Stop if user chooses to abort
                    else:
                        Progress_bar.print_with_offset(msg, 6)
                        sys.stdout.write('\033[1E')
                        stopping = input("\033[31m Press \033[38;5;220m\033[4;1mEnter\033[22;24m\033[31m to continue or \033[38;5;220m\033[4;1mQ\033[22;24m\033[31m to quit  \033[25m \033[0m")
                        if stopping.upper() == "Q":
                            Progress_bar.clear_terminal()
                            sys.exit()
                continue

            geom = GeometryConverter.linearize_geometry(geom)

            if geom is None:
                continue

            #validate geometry and fix if needed
            if not geom.IsValid():
                if all_errors:
                    msg = f"Invalid geometry found for feature {feature.GetFID()} in {src_layer.GetName()}"
                    if error_handler:
                        if not error_handler(msg):
                            return
                    else:
                        Progress_bar.print_with_offset(msg, 6)
                        sys.stdout.write('\033[1E')
                        stopping = input("\033[31m Press \033[38;5;220m\033[4;1mEnter\033[22;24m\033[31m to continue or \033[38;5;220m\033[4;1mQ\033[22;24m\033[31m to quit  \033[25m \033[0m")
                        if stopping.upper() == "Q":
                            Progress_bar.clear_terminal()
                            sys.exit()
                geom = geom.MakeValid()

            out_feature.SetGeometry(geom)
            out_feature.SetFrom(feature)
            out_layer.CreateFeature(out_feature)
            out_feature = None  # Free memory
            if progress_callback:
                progress_callback(i + 1, total_features)

    @staticmethod
    def Process_layers(src_gdb, dst_gdb, error_handler=None):
        src_ds = File_handles.import_file(src_gdb)
        if src_ds is None:
            print("\033[31mFailed to open source. Please check the path and try again.\033[0m")
            return
    
        dst_ds = File_handles.export_file(dst_gdb)

        if dst_ds is None:
            print("\033[31mFailed to create destination. Please check the path and try again.\033[0m")
            return
    
        total_layers = src_ds.GetLayerCount()
        master_progress = 0
        last_copied_layers = []
    
        for i in range(total_layers):
            src_layer = src_ds.GetLayerByIndex(i)
            layer_name = src_layer.GetName()
            layer_defn = src_layer.GetLayerDefn()
    
            out_layer = dst_ds.CreateLayer(
                layer_name,
                srs=src_layer.GetSpatialRef(),
                geom_type=layer_defn.GetGeomType()
            )
    
            for j in range(layer_defn.GetFieldCount()):
                field_defn = layer_defn.GetFieldDefn(j)
                try:
                    out_layer.CreateField(field_defn)
                except Exception as e:
                    msg = f"\033[31mFailed to create field \033[38;5;64m{field_defn.GetName()}\033[31m : {e}\033[0m"
                    if error_handler:
                        if not error_handler(msg):
                            return
                    else:
                        Progress_bar.print_with_offset(msg, 6)

            feature_count = src_layer.GetFeatureCount()

            def progress_callback(current, total):
                # Move cursor up two lines to overwrite both bars
                sys.stdout.write(f'\033[{Progress_bar.offset};1H')
                #sys.stdout.write('\033[K')
                sys.stdout.flush()
                # Print master bar (with newline)
                Progress_bar.print_smooth_progress(
                    int(((i + (current / total if total > 0 else 0)) / total_layers) * 100),
                    100, prefix="\033[38;5;99mMaster Progress\033[0m"
                )
                sys.stdout.write(f'\033[{Progress_bar.offset + 1};1H')
                #sys.stdout.write('\033[K')
                sys.stdout.flush()
                # Print sub-bar (with newline)
                Progress_bar.print_smooth_progress(
                    current, total, prefix=f"\033[38;5;75mCopying features for layer: \033[38;5;64m{layer_name}\033[0m"
                )
    

            def update_last_copied_layers(layer_name):
                last_copied_layers.append(layer_name)
                if len(last_copied_layers) > 3:
                    last_copied_layers.pop(0)
                sys.stdout.write(f'\033[{Progress_bar.offset + 2};1H')
                # Print the last three layers
                for layer in last_copied_layers:
                    sys.stdout.write(f"Copied layer: \033[38;5;64m{layer}\033[0m\n")

            try:
                GeometryConverter.copy_features(src_layer, out_layer, progress_callback=progress_callback, error_handler=error_handler)
            except Exception as e:
                msg = f"\033[31mFailed to copy features for layer \033[38;5;64m{layer_name}\033[31m : {e}\033[0m"
                if error_handler:
                    if not error_handler(msg):
                        return
                else:
                    Progress_bar.print_with_offset(msg, 6)

            update_last_copied_layers(layer_name)


        src_ds = None
        dst_ds = None
        print("\n\033[K\nCopy completed.")

def find_valid_geofiles(directory):
    """Scan directory for valid geospatial files."""
    valid_exts = [".gdb", ".gpkg", ".shp", ".esrijson", ".json", ".geojson", ".dxf", ".dwg"]
    found_files = []
    for root, dirs, files in os.walk(directory):
        for file in files:
            ext = os.path.splitext(file)[1].lower()
            if ext in valid_exts:
                found_files.append(os.path.join(root, file))
    return found_files


def run_gui():
    try:
        import tkinter as tk
        from tkinter import filedialog, messagebox, ttk

        
        tkdnd_zip_b64 = ''''''

        # --- Unpack tkdnd base64 ---
        def extract_tkdnd():
                zip_data = base64.b64decode(tkdnd_zip_b64)
                # Save to the same directory as this script
                script_dir = pathlib.Path(__file__).parent
                tkdnd_extract_path = script_dir / "tkdnd2"
                tkdnd_extract_path.mkdir(exist_ok=True)
                with zipfile.ZipFile(io.BytesIO(zip_data)) as zf:
                    zf.extractall(tkdnd_extract_path)
            
                sys.path.insert(0, str(script_dir))
                return tkdnd_extract_path

        # Extract and load
        tkdnd_dir = extract_tkdnd()
        print(tkdnd_dir)

        tk_root = tk.Tk()
        tk_root.tk.eval(f'set auto_path "{{{tkdnd_dir}}} $auto_path"')
        #tk_root.tk.eval('package require tkdnd')
        tk_root.destroy()

        from tkdnd2 import DND_FILES, TkinterDnD


    except ImportError:
        tk = None  # Tkinter not available

    if tk is None:
        print("Tkinter is not available.")
        sys.exit(1)

    class CopyDatabaseGUI(TkinterDnD.Tk):
        def __init__(self):
            Progress_bar.clear_terminal()
            super().__init__()

            self.title("Remove True Curves")
            self.geometry("800x330")
            self.resizable(True, True)

            self.all_errors_var = tk.BooleanVar(value=False)
            self.src_path_var = tk.StringVar()
            self.dst_path_var = tk.StringVar()
            self.output_type_var = tk.StringVar(value="Leave as is")
            self.segmentize_tolerance_var = tk.StringVar(value=str(segmentize_tolerance))

            self.output_types = [
                "Leave as is",
                "FileGDB (.gdb)",
                "GeoPackage (.gpkg)",
                "Shapefile (.shp)",
                "ESRIJSON (.esrijson)",
                "GeoJSON (.geojson)",
                "DXF (.dxf)",
                "DWG (.dwg)"
            ]
            self.ext_map = {
                "FileGDB (.gdb)": ".gdb",
                "GeoPackage (.gpkg)": ".gpkg",
                "Shapefile (.shp)": ".shp",
                "ESRIJSON (.esrijson)": ".esrijson",
                "GeoJSON (.geojson)": ".geojson",
                "DXF (.dxf)": ".dxf",
                "DWG (.dwg)": ".dwg"
            }

            tk.Label(self, text="Source (file or directory):").pack(anchor="w", padx=10, pady=(10,0))
            src_frame = tk.Frame(self)
            src_frame.pack(fill="x", padx=10)

            self.src_entry = tk.Entry(src_frame, textvariable=self.src_path_var, width=50)
            self.src_entry.pack(side="left", fill="x", expand=True)

            self.src_entry.drop_target_register(DND_FILES)
            self.src_entry.dnd_bind('<<Drop>>', self.on_src_drop)

            tk.Button(src_frame, text="Browse", command=self.browse_src).pack(side="left", padx=5)

            tk.Label(self, text="Destination (file or directory):").pack(anchor="w", padx=10, pady=(10,0))
            dst_frame = tk.Frame(self)
            dst_frame.pack(fill="x", padx=10)

            self.dst_entry = tk.Entry(dst_frame, textvariable=self.dst_path_var, width=38)
            self.dst_entry.pack(side="left", fill="x", expand=True)
            self.dst_entry.drop_target_register(DND_FILES)

            self.dst_entry.dnd_bind('<<Drop>>', self.on_dst_drop)

            tk.Button(dst_frame, text="Browse", command=self.browse_dst).pack(side="left", padx=5)
            ttk.Combobox(dst_frame, textvariable=self.output_type_var, values=self.output_types, width=18, state="readonly").pack(side="left", padx=5)

            row_frame = tk.Frame(self)
            row_frame.pack(fill="x", padx=10, pady=(10, 0))

            tk.Label(row_frame, text="Segmenting Tolerance:").pack(side="left")
            tk.Entry(row_frame, textvariable=self.segmentize_tolerance_var, width=10).pack(side="left", padx=(5, 20))
            tk.Checkbutton(row_frame, text="Prompt on all errors", variable=self.all_errors_var).pack(side="left")

            self.start_btn = tk.Button(self, text="Start Copy", command=self.start_copy)
            self.start_btn.pack(pady=15)

            self.progress_text = tk.Text(self, height=7, state="disabled")
            self.progress_text.pack(padx=10, pady=5, fill="both", expand=True)


        def browse_src(self):
            path = filedialog.askopenfilename() or filedialog.askdirectory()
            if path:
                self.src_path_var.set(path)

        def browse_dst(self):
            path = filedialog.askopenfilename() or filedialog.askdirectory()
            if path:
                self.dst_path_var.set(path)

        def on_src_drop(self, event):
            path = event.data
            if path.startswith('{') and path.endswith('}'):
                path = path[1:-1]
            self.src_path_var.set(path)

        def on_dst_drop(self, event):
            path = event.data
            if path.startswith('{') and path.endswith('}'):
                path = path[1:-1]
            self.dst_path_var.set(path)

        def gui_error_handler(self, msg):
            #print("here")
            result = messagebox.askquestion("Geometry Error", msg + "\nContinue?", icon='warning')
            return result == "yes"
    
        def start_copy(self):
            src_input = self.src_path_var.get().strip()
            dst_input = self.dst_path_var.get().strip()
            segmentize_tolerance = float(self.segmentize_tolerance_var.get().strip())
            output_type = self.output_type_var.get()
            if not src_input or not dst_input:
                messagebox.showerror("Error", "Please specify both source and destination.")
                return
            self.start_btn.config(state="disabled")
            self.progress_text.config(state="normal")
            self.progress_text.delete("1.0", tk.END)
            self.progress_text.insert(tk.END, "Starting copy...\n")
            self.progress_text.config(state="disabled")
            threading.Thread(
                target=self.run_copy,
                args=(src_input, dst_input, self.all_errors_var.get(), output_type),
                daemon=True
            ).start()

        def gui_print(self, msg):
            self.progress_text.config(state="normal")
            self.progress_text.insert(tk.END, msg + "\n")
            self.progress_text.see(tk.END)
            self.progress_text.config(state="disabled")
            self.update_idletasks()

        def run_copy(self, src_input, dst_input, all_errors_flag, output_type):
            global all_errors
            all_errors = all_errors_flag
            src_path = pathlib.Path(src_input).expanduser().resolve()
            dst_path = pathlib.Path(dst_input).expanduser().resolve()
            ext_override = self.ext_map.get(output_type, None) if output_type != "Leave as is" else None
            try:
                if src_path.is_dir():
                    src_files = find_valid_geofiles(str(src_path))
                    if not src_files:
                        self.gui_print("No valid geospatial files found in source directory.")
                        self.start_btn.config(state="normal")
                        return
                    if not dst_path.exists():
                        dst_path.mkdir(parents=True, exist_ok=True)
                    elif not dst_path.is_dir():
                        self.gui_print("Destination must be a directory when copying multiple files.")
                        self.start_btn.config(state="normal")
                        return
                    for src_file in src_files:
                        rel_path = os.path.relpath(src_file, str(src_path))
                        dst_file = dst_path / rel_path
                        if ext_override:
                            dst_file = dst_file.with_suffix(ext_override)
                        dst_file.parent.mkdir(parents=True, exist_ok=True)
                        self.gui_print(f"Copying {src_file} -> {dst_file}")
                        try:
                            GeometryConverter.Process_layers(
                                pathlib.Path(src_file).as_posix(),
                                dst_file.as_posix(),
                                error_handler=self.gui_error_handler  # Pass handler
                            )
                        except Exception as e:
                            self.gui_print(f"Error processing {src_file}: {e}")
                            continue
                else:
                    src_gdb = src_path.as_posix()
                    if dst_path.is_dir():
                        dst_file = dst_path / src_path.name
                        if ext_override:
                            dst_file = dst_file.with_suffix(ext_override)
                        dst_gdb = dst_file.as_posix()
                    else:
                        dst_file = dst_path
                        if ext_override:
                            dst_file = dst_file.with_suffix(ext_override)
                        dst_gdb = dst_file.as_posix()
                    self.gui_print(f"Copying {src_gdb} -> {dst_gdb}")
                    try:
                        GeometryConverter.Process_layers(src_gdb, dst_gdb)
                    except Exception as e:
                        self.gui_print(f"Error processing {src_gdb}: {e}")
                self.gui_print("Copy completed.")
            except Exception as e:
                self.gui_print(f"Error: {e}")

            finally:
                self.start_btn.config(state="normal")

    app = CopyDatabaseGUI()
    app.mainloop()

if __name__ == "__main__":
    if "-gui" in sys.argv:
        run_gui()
    else:
        Progress_bar.clear_terminal()
        all_errors = input("Do you want to prompt on all errors? \033[38;5;220m\033[4;1mY\033[0m or \033[38;5;220m\033[4;1mN\033[0m: ").strip().lower() in ("y", "yes", "true", "1")
        src_input = input("Enter path to source (file or directory): \033[4m").replace('"', '').strip()
        dst_input = input("\033[24mEnter path for destination (file or directory): \033[4m").replace('"', '').strip()
        sys.stdout.write("\033[0m")
        sys.stdout.flush()
        src_path = pathlib.Path(src_input).expanduser().resolve()
        dst_path = pathlib.Path(dst_input).expanduser().resolve()

        # Determine if source is directory or file
        if src_path.is_dir() and src_path.suffix.lower() != ".gdb":
            src_files = find_valid_geofiles(str(src_path))
            if not src_files:
                print("\033[31mNo valid geospatial files found in source directory.\033[0m")
                sys.exit(1)
            # If destination is not a directory, error
            if not dst_path.exists():
                dst_path.mkdir(parents=True, exist_ok=True)
            elif not dst_path.is_dir():
                print("\033[31mDestination must be a directory when copying multiple files.\033[0m")
                sys.exit(1)
            for src_file in src_files:
                rel_path = os.path.relpath(src_file, str(src_path))
                dst_file = dst_path / rel_path
                dst_file.parent.mkdir(parents=True, exist_ok=True)
                Progress_bar.print_with_offset(f"\nCopying\033[38;5;64m {src_file} \033[0m->\033[38;5;64m {dst_file}\033[0m", 5)
                GeometryConverter.Process_layers(
                    pathlib.Path(src_file).as_posix(),
                    dst_file.as_posix()
                )
        else:
            # Single file mode
            src_gdb = src_path.as_posix()
            # If destination is a directory, use same filename
            if dst_path.is_dir():
                dst_gdb = (dst_path / src_path.name).as_posix()
            else:
                dst_gdb = dst_path.as_posix()
            GeometryConverter.Process_layers(src_gdb, dst_gdb)